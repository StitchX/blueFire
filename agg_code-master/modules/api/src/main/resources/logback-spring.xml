<?xml version="1.0" encoding="UTF-8"?>
<!-- 当scan属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。 -->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <!-- 定义变量值，也可以定义成一个路径，可以使“${}”来使用变量 -->
    <springProperty scope="context" name="modelName" source="spring.application.name"/>
    <!-- 开发环境日志地址 -->
    <property name="log_path" value="/data/agg_code_logs"/>
    <!-- 线上环境日志地址 -->
    <!--<property name="log_path" value="/home/application_logs/agg_code/api_logs/api"/>-->
    <property name="log_encoder_code" value="[%d{yyyy-MM-dd HH:mm:ss}] [%thread] [%-5level] [%logger] %msg%n"/>
    <!-- 设置上下文名称，用于区分不同应用程序的记录，一旦设置，不能修改 -->
    <contextName>elk_log</contextName>
    <!-- 获取时间戳字符串 -->
    <timestamp key="now_time" datePattern="yyyyMMdd'T'HHmmss"/>
    <!-- 负责写日志的组件，它有两个必要属性name和class。name指定appender名称，class指定appender的全限定名 -->
    <!--输出到控制台-->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 对日志进行格式化 -->
        <encoder>
            <pattern>${log_encoder_code}</pattern>
        </encoder>
    </appender>

    <appender name="log_info" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 按天回滚 daily -->
            <fileNamePattern>${log_path}/${modelName}/info-log-%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- 日志最大的历史 180天 -->
            <maxHistory>180</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>
        </encoder>
    </appender>
    <appender name="log_error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 过滤器，只记录ERROR级别的日志 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <!-- 最常用的滚动策略，它根据时间来制定滚动策略.既负责滚动也负责出发滚动 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志输出位置  可相对、和绝对路径 -->
            <fileNamePattern>${log_path}/${modelName}/error-log-%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- 可选节点，控制保留的归档文件的最大数量，超出数量就删除旧文件假设设置每个月滚动，且<maxHistory>是6，
            则只保存最近6个月的文件，删除之前的旧文件。注意，删除旧文件是，那些为了归档而创建的目录也会被删除-->
            <maxHistory>180</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- SQL相关日志输出-->
    <!--    <logger name="org.apache.ibatis" level="INFO" additivity="false"/>-->
    <!--    <logger name="org.mybatis.spring" level="INFO" additivity="false"/>-->
    <!--    <logger name="com.github.miemiedev.mybatis.paginator" level="INFO" additivity="false"/>-->
    <appender name="send" class="com.fire.common.listener.ErrorListener"/>
    <!-- 把>=DEBUG级别的日志都输出到控制台 -->
    <root level="INFO">
        <appender-ref ref="console"/>
        <appender-ref ref="log_info"/>
        <appender-ref ref="log_error"/>
        <appender-ref ref="send"/>
    </root>
    <!-- 屏蔽心跳日志-->
    <logger name="com.alibaba.nacos" level="error" additivity="false"/>
</configuration>
